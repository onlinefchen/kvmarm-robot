name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  schedule:
    # 每周一早上9点 (UTC) 运行
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # 确保markdown包被安装
        pip install markdown>=3.5.0
        
    - name: Run analysis and generate reports
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # 确保目录存在
        mkdir -p docs/reports
        python analyze.py main --output results
        
    - name: Generate HTML reports and prepare for deployment
      run: |
        # 确保docs目录存在
        mkdir -p docs/reports
        
        # 查找最新的结果目录
        LATEST_DIR=$(ls -td results/*/ | head -1)
        if [ -d "$LATEST_DIR" ]; then
          echo "📁 找到结果目录: $LATEST_DIR"
          
          # 复制到docs目录以便GitHub Pages部署
          cp -r "$LATEST_DIR" docs/reports/
          
          # 生成HTML报告
          python html_generator.py --results-dir "$LATEST_DIR" --deploy
        else
          echo "❌ 未找到结果目录"
          exit 1
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
